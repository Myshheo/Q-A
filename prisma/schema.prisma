// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  userId    Int       @id @default(autoincrement()) @map("userId")
  email     String    @unique @map("email")
  password  String    @map("password")
  nickname  String    @map("nickname")
  managerYn Boolean   @default(false) @map("managerYn")
  createdAt DateTime  @default(now()) @map("createdAt")
  updatedAt DateTime  @updatedAt @map("updatedAt")
  
  Questions  Questions[]
  Answers    Answers[]
  @@map("Users")
}

model Questions {
  questionId  Int       @id @default(autoincrement()) @map("questionId")
  UserId      Int       @map("UserId")
  title       String    @map("title")
  content     String    @map("content")
  createdAt   DateTime  @default(now()) @map("createdAt")
  updatedAt   DateTime  @updatedAt @map("updatedAt")

  Answers     Answers[]
  User        Users           @relation(fields: [UserId], references:[userId])
  @@map("Questions")
}

model Answers {
  answerId    Int       @id @default(autoincrement()) @map("answerId")
  UserId      Int       @map("UserId")
  QuestionId  Int       @map("QuestionId")
  content     String    @map("content")
  selectedYn  Boolean   @default(false) @map("selectedYn")
  createdAt   DateTime  @default(now()) @map("createdAt")
  updatedAt   DateTime  @updatedAt @map("updatedAt")

  Question    Questions        @relation(fields:[QuestionId], references:[questionId])
  User        Users             @relation(fields:[UserId], references: [userId])

  @@map("Answers")
}